name: Test back-end and front-end
env:
  DATABASE_SERVER_NAME: database
  DATABASE_USER: root
  DATABASE_PASSWORD: root
  DATABASE_DATABASE_NAME: viikkobiitsi
  ADMIN_UI_DOMAIN: http://localhost:3000
  REACT_APP_API_URL_ARG: http://localhost:8081/
on:
  push:
    branches: [ "dev" ]
jobs:
  # build-back-end:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build the image
  #       run: docker build --tag poytiis/viikkobiitsi-backend ./backEnd

  #     - name: Push the image
  #       run: |
  #         docker login -u poytiis -p ${{ secrets.DOCKER_HUB_TOKEN }}
  #         docker push poytiis/viikkobiitsi-backend

  test-back-end:
    runs-on: ubuntu-latest
    # needs: build-back-end
    services:
      database:
        image: mariadb:10.3
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
      back-end:
        image: poytiis/viikkobiitsi-backend
        ports:
          - 8081:80
        env:
          DATABASE_SERVER_NAME: ${{ env.DATABASE_SERVER_NAME }}
          DATABASE_USER:  ${{ env.DATABASE_USER }}
          DATABASE_PASSWORD:  ${{ env.DATABASE_PASSWORD }}
          DATABASE_DATABASE_NAME: ${{ env.DATABASE_DATABASE_NAME }}
          ADMIN_UI_DOMAIN:  ${{ env.ADMIN_UI_DOMAIN }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Create database
        working-directory: ./backEnd/SQL
        run: mysql --host=127.0.0.1 --user=root --password=root < schema.sql

      - name: Run tests
        working-directory: ./e2eTests/backEndTests
        run: |
          npm install
          npm test

  # test-front-end-unit:
  #   runs-on: ubuntu-latest
  #   env:
  #     CI: true
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x
  #     - name: Run tests
  #       working-directory: ./adminUI
  #       run: |
  #         npm install
  #         npm test

  # build-front-end:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build the image
  #       run: docker build --tag poytiis/viikkobiitsi-admin-front-end --build-arg="REACT_APP_API_URL_ARG=${{ env.REACT_APP_API_URL_ARG }}" ./adminUI

  #     - name: Push the image
  #       run: |
  #         docker login -u poytiis -p ${{ secrets.DOCKER_HUB_TOKEN }}
  #         docker push poytiis/viikkobiitsi-admin-front-end
          
  # test-front-end-e2e:
  #   runs-on: ubuntu-latest
  #   needs: 
  #     - build-front-end
  #     - build-back-end
  #   services:
  #     database:
  #       image: mariadb:10.3
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #       ports:
  #         - 3306:3306
  #     back-end:
  #       image: poytiis/viikkobiitsi-backend
  #       ports:
  #         - 8081:80
  #       env:
  #         DATABASE_SERVER_NAME: ${{ env.DATABASE_SERVER_NAME }}
  #         DATABASE_USER:  ${{ env.DATABASE_USER }}
  #         DATABASE_PASSWORD:  ${{ env.DATABASE_PASSWORD }}
  #         DATABASE_DATABASE_NAME: ${{ env.DATABASE_DATABASE_NAME }}
  #         ADMIN_UI_DOMAIN:  ${{ env.ADMIN_UI_DOMAIN }}
  #     front-end:
  #       image: poytiis/viikkobiitsi-admin-front-end
  #       ports:
  #         - 3000:80
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.x

  #     - name: Create database
  #       working-directory: ./backEnd/SQL
  #       run: mysql --host=127.0.0.1 --user=root --password=root < schema.sql

  #     - name: Run tests
  #       working-directory: ./e2eTests/Cypress
  #       run: |
  #         npm install
  #         npx cypress run
